startStarting parallel pool (parpool) using the 'local' profile ...
connected to 2 workers.
pool startedinitialization complete
 starting 1. 

 starting 3. 
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('likehdder', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\likehdder.m', 8)" style="font-weight:bold">likehdder</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\likehdder.m',8,0)">line 8</a>)
Not enough input arguments.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('initial', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\initial.m', 19)" style="font-weight:bold">initial</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\initial.m',19,0)">line 19</a>)
        th = theta_now - gam * likehdder(theta_now, Rg, X,j);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PG_dat', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m', 29)" style="font-weight:bold">PG_dat</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m',29,0)">line 29</a>)
parfor j = 1:p

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('par_discretegraph', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m', 45)" style="font-weight:bold">par_discretegraph</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m',45,0)">line 45</a>)
    [delta,theta] = PG_dat(X,Niter,burn,thin,nr_of_cores,options);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('testing', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m', 1)" style="font-weight:bold">testing</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m',1,0)">line 1</a>)
par_discretegraph('ising.csv',1000,900,2,2);
} 
delete(gcp('nocreate'))
Parallel pool using the 'local' profile is shutting down.
testing
startStarting parallel pool (parpool) using the 'local' profile ...
connected to 2 workers.
pool startedinitialization complete
 starting 1. 

 starting 3. 
Analyzing and transferring files to the workers ...done.

 starting 1. 

 starting 3. 
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PG_dat', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m', 29)" style="font-weight:bold">PG_dat</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m',29,0)">line 29</a>)
An UndefinedFunction error was thrown on the workers for 'pgdraw'.  This might be because the file containing 'pgdraw' is not accessible
on the workers.  Use addAttachedFiles(pool, files) to specify the required files to be attached.  See the documentation for
'parallel.Pool/addAttachedFiles' for more details.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('par_discretegraph', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m', 45)" style="font-weight:bold">par_discretegraph</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m',45,0)">line 45</a>)
    [delta,theta] = PG_dat(X,Niter,burn,thin,nr_of_cores,options);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('testing', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m', 1)" style="font-weight:bold">testing</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m',1,0)">line 1</a>)
par_discretegraph('ising.csv',1000,900,2,2);

Caused by:
    Undefined function 'pgdraw' for input arguments of type 'double'.
} 
delete(gcp('nocreate'))
Parallel pool using the 'local' profile is shutting down.
clc
testing
startStarting parallel pool (parpool) using the 'local' profile ...
connected to 2 workers.
pool startedinitialization complete
 starting 1. 

 starting 3. 
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PG_dat', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m', 29)" style="font-weight:bold">PG_dat</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m',29,0)">line 29</a>)
Not enough input arguments.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('par_discretegraph', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m', 45)" style="font-weight:bold">par_discretegraph</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m',45,0)">line 45</a>)
    [delta,theta] = PG_dat(X,Niter,burn,thin,nr_of_cores,options);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('testing', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m', 1)" style="font-weight:bold">testing</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m',1,0)">line 1</a>)
par_discretegraph('ising.csv',1000,900,2,2);
} 
inputfile = 'ising.csv'; NIter = 1000; burn = 900; thin = 2; nr_of_cores = 2;
PG = 1

PG =

     1

X = csvread(inputfile,1,0);
if(min(unique(X))>1)
    fprintf('error in input format!')
elseif(min(unique(X))==1)
    X = X-1;
end
X = csvread(inputfile,0,0);
if(min(unique(X))>1)
    fprintf('error in input format!')
elseif(min(unique(X))==1)
    X = X-1;
end
[n,p] = size(X);

%% penalty parameter initialization for initialization algo
options.gam1 = 300; 

%% prior parameters (gam for inactives) and (rho_in for initialization of prior for active) 
options.gam = 0.1/max(p,n); options.rho = sqrt(n/log(p));options.u = 2;
PG~=0

ans =

  <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a>

   1

Z = X;
clear
clc
testing
start{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parpool', 'C:\Program Files\MATLAB\R2018a\toolbox\distcomp\cluster\parpool.m', 113)" style="font-weight:bold">parpool</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018a\toolbox\distcomp\cluster\parpool.m',113,0)">line 113</a>)
Found an interactive session. You cannot have multiple interactive sessions open simultaneously. To terminate the existing session, use
'delete(gcp('nocreate'))'.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PG_dat', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m', 6)" style="font-weight:bold">PG_dat</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m',6,0)">line 6</a>)
myPool = parpool('local', nr_of_cores);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('par_discretegraph', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m', 44)" style="font-weight:bold">par_discretegraph</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m',44,0)">line 44</a>)
    [delta,theta] = PG_dat(X,Niter,burn,thin,nr_of_cores,options);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('testing', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m', 2)" style="font-weight:bold">testing</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m',2,0)">line 2</a>)
par_discretegraph(X,1000,900,2,2);
} 
delete(gcp('nocreate'));
Parallel pool using the 'local' profile is shutting down.
testing
startStarting parallel pool (parpool) using the 'local' profile ...
connected to 2 workers.
pool startedinitialization complete
 starting 1. 

 starting 3. 
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbquit; end
delete(gcp('nocreate'))
Parallel pool using the 'local' profile is shutting down.
clear
clc
testing
startStarting parallel pool (parpool) using the 'local' profile ...
connected to 2 workers.
pool startedinitialization complete
 starting 1. 

 starting 3. 
if system_dependent('IsDebugMode')==1, dbquit; end

 initialized 1. 

 initialized 3. 
delete(gcp('nocreate'))
Parallel pool using the 'local' profile is shutting down.
testing
startStarting parallel pool (parpool) using the 'local' profile ...
connected to 2 workers.
pool startedinitialization complete
 starting 1. 

 starting 3. 

 ending 1. 

 ending 3. 

 starting 8. 

 ending 8. 

 starting 2. 

 ending 2. 

 starting 7. 

 ending 7. 

 starting 13. 

 ending 13. 

 starting 6. 

 ending 6. 

 starting 12. 

 ending 12. 

 starting 5. 

 ending 5. 

 starting 11. 

 ending 11. 

 starting 4. 

 ending 4. 

 starting 10. 

 ending 10. 

 starting 9. 

 ending 9. 

 starting 17. 

 ending 17. 

 starting 16. 

 ending 16. 

 starting 19. 

 ending 19. 

 starting 15. 

 ending 15. 

 starting 18. 

 ending 18. 

 starting 14. 

 ending 14. 

 starting 20. 

 ending 20. 
startStarting parallel pool (parpool) using the 'local' profile ...
connected to 2 workers.
pool startedinitialization complete
 starting 1. 

 starting 3. 

 ending 1. 

 ending 3. 

 starting 2. 

 ending 2. 

 starting 8. 

 ending 8. 

 starting 7. 

 ending 7. 

 starting 13. 

 ending 13. 

 starting 6. 

 ending 6. 

 starting 12. 

 ending 12. 

 starting 5. 

 ending 5. 

 starting 11. 

 ending 11. 

 starting 4. 

 ending 4. 

 starting 10. 

 ending 10. 

 starting 9. 

 ending 9. 

 starting 17. 

 ending 17. 

 starting 16. 

 ending 16. 

 starting 19. 

 ending 19. 

 starting 18. 

 ending 18. 

 starting 15. 

 ending 15. 

 starting 14. 

 ending 14. 

 starting 20. 

 ending 20. 
startStarting parallel pool (parpool) using the 'local' profile ...
connected to 2 workers.
pool startedinitialization complete
 starting 1. 

 starting 3. 
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018a\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m',225,1)">225 </a>                    r = q.poll(1, java.util.concurrent.TimeUnit.SECONDS);
if system_dependent('IsDebugMode')==1, dbquit; end

 initialized 1. 

 initialized 3. 
clear
clc
testing
{Attempt to execute SCRIPT par_discretegraph as a function:
C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('testing', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m', 2)" style="font-weight:bold">testing</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m',2,0)">line 2</a>)
par_discretegraph(data,1000,900,2,2,1);
} 
testing
{Attempt to execute SCRIPT par_discretegraph as a function:
C:\Users\Anwesha\Dropbox\Documents\software - version 1\par_discretegraph.m

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('testing', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m', 2)" style="font-weight:bold">testing</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\testing.m',2,0)">line 2</a>)
par_discretegraph(data,1000,900,2,2,1);
} 
Niter = 1000; burn = 900; thin = 2; nr_of_cores = 2; PG = 1;
if(min(unique(data))>1)
    fprintf('error in input format!')
elseif(min(unique(data))==1)
    data = data-1;
end

[n,p] = size(data);

%% penalty parameter initialization for initialization algo
options.gam1 = 300; 

%% prior parameters (gam for inactives) and (rho_in for initialization of prior for active) 
options.gam = 0.1/max(p,n); options.rho = sqrt(n/log(p));options.u = 2;

% %% langevin parameters
% options.c = 10; %% stabilizing gradient for the langevin algorithm
% options.step_in = .5; %%% step size for gradient search in langevin algorithm


 

if(length(unique(data))>2)
    cd ./potts
    [ delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
else
    cd ./ising
    if PG~=0
    [delta,theta] = PG_dat(data,Niter,burn,thin,nr_of_cores,options);    
    else
    [delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
    end
end
start{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parpool', 'C:\Program Files\MATLAB\R2018a\toolbox\distcomp\cluster\parpool.m', 113)" style="font-weight:bold">parpool</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018a\toolbox\distcomp\cluster\parpool.m',113,0)">line 113</a>)
Found an interactive session. You cannot have multiple interactive sessions open simultaneously. To terminate the existing session, use
'delete(gcp('nocreate'))'.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PG_dat', 'C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m', 6)" style="font-weight:bold">PG_dat</a> (<a href="matlab: opentoline('C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\PG_dat.m',6,0)">line 6</a>)
myPool = parpool('local', nr_of_cores);
} 
delete(gcp('nocreate'))
Parallel pool using the 'local' profile is shutting down.
if(min(unique(data))>1)
    fprintf('error in input format!')
elseif(min(unique(data))==1)
    data = data-1;
end

[n,p] = size(data);

%% penalty parameter initialization for initialization algo
options.gam1 = 300; 

%% prior parameters (gam for inactives) and (rho_in for initialization of prior for active) 
options.gam = 0.1/max(p,n); options.rho = sqrt(n/log(p));options.u = 2;

% %% langevin parameters
% options.c = 10; %% stabilizing gradient for the langevin algorithm
% options.step_in = .5; %%% step size for gradient search in langevin algorithm


 

if(length(unique(data))>2)
    cd ./potts
    [ delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
else
    cd ./ising
    if PG~=0
    [delta,theta] = PG_dat(data,Niter,burn,thin,nr_of_cores,options);    
    else
    [delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
    end
end
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('cd')" style="font-weight:bold">cd</a>
Cannot CD to C:\Users\Anwesha\Dropbox\Documents\software - version 1\ising\ising (Name is nonexistent or not a directory).
} 
if(min(unique(data))>1)
    fprintf('error in input format!')
elseif(min(unique(data))==1)
    data = data-1;
end

[n,p] = size(data);

%% penalty parameter initialization for initialization algo
options.gam1 = 300; 

%% prior parameters (gam for inactives) and (rho_in for initialization of prior for active) 
options.gam = 0.1/max(p,n); options.rho = sqrt(n/log(p));options.u = 2;

% %% langevin parameters
% options.c = 10; %% stabilizing gradient for the langevin algorithm
% options.step_in = .5; %%% step size for gradient search in langevin algorithm


 

if(length(unique(data))>2)
    cd ./potts
    [ delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
else
    cd ./ising
    if PG~=0
    [delta,theta] = PG_dat(data,Niter,burn,thin,nr_of_cores,options);    
    else
    [delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
    end
end
startStarting parallel pool (parpool) using the 'local' profile ... connected to 20 workers.
pool startedinitialization complete
 starting 1. 

 initialized 1. 
<a href="matlab: opentoline('/u/home/anwebha/Documents/software - version 1/ising/PG_dat.m',53,1)">53  </a>    Xbar = diag(W.^(0.5))*X;
if system_dependent('IsDebugMode')==1, dbquit; end
delete(gcp('nocreate'));
Parallel pool using the 'local' profile is shutting down.
if(min(unique(data))>1)
    fprintf('error in input format!')
elseif(min(unique(data))==1)
    data = data-1;
end

[n,p] = size(data);

%% penalty parameter initialization for initialization algo
options.gam1 = 300; 

%% prior parameters (gam for inactives) and (rho_in for initialization of prior for active) 
options.gam = 0.1/max(p,n); options.rho = sqrt(n/log(p));options.u = 2;

% %% langevin parameters
% options.c = 10; %% stabilizing gradient for the langevin algorithm
% options.step_in = .5; %%% step size for gradient search in langevin algorithm


 

if(length(unique(data))>2)
    cd ./potts
    [ delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
else
    cd ./ising
    if PG~=0
    [delta,theta] = PG_dat(data,Niter,burn,thin,nr_of_cores,options);    
    else
    [delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
    end
end
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('cd')" style="font-weight:bold">cd</a>
Cannot CD to ./ising (Name is nonexistent or not a directory).
} 
if(min(unique(data))>1)
    fprintf('error in input format!')
elseif(min(unique(data))==1)
    data = data-1;
end

[n,p] = size(data);

%% penalty parameter initialization for initialization algo
options.gam1 = 300; 

%% prior parameters (gam for inactives) and (rho_in for initialization of prior for active) 
options.gam = 0.1/max(p,n); options.rho = sqrt(n/log(p));options.u = 2;

% %% langevin parameters
% options.c = 10; %% stabilizing gradient for the langevin algorithm
% options.step_in = .5; %%% step size for gradient search in langevin algorithm


 

if(length(unique(data))>2)
    cd ./potts
    [ delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
else
    cd ./ising
    if PG~=0
    [delta,theta] = PG_dat(data,Niter,burn,thin,nr_of_cores,options);    
    else
    [delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
    end
end
startStarting parallel pool (parpool) using the 'local' profile ... connected to 20 workers.
pool startedinitialization complete<a href="matlab: opentoline('/usr/local/MATLAB/R2016b/toolbox/distcomp/distcomp/+distcomp/remoteparfor.m',128,1)">128 </a>                    obj.displayOutput();
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbquit; end

 starting 18. 

 initialized 18. 
Operation terminated by user during pgdraw>truncgamma_vec (line 154)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 1. 

 initialized 1. 
Operation terminated by user during parallel_function>make_general_channel/channel_general (line 914)


In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 17. 

 initialized 17. 
Operation terminated by user during pgdraw>truncinvgrng_vec (line 124)


In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 12. 

 initialized 12. 
Operation terminated by user during pgdraw>truncgamma_vec (line 154)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 16. 

 initialized 16. 
Operation terminated by user during pgdraw (line 66)


In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 5. 

 initialized 5. 
Operation terminated by user during pgdraw>truncgamma_vec (line 154)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 3. 

 initialized 3. 
Operation terminated by user during pgdraw>truncgamma_vec (line 154)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 9. 

 initialized 9. 
Operation terminated by user during parallel_function>make_general_channel/channel_general (line 914)


In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 15. 

 initialized 15. 
Operation terminated by user during pgdraw>truncinvgrng_vec (line 124)


In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 4. 

 initialized 4. 
Operation terminated by user during pgdraw (line 82)


In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 19. 

 initialized 19. 
Operation terminated by user during pgdraw>truncgamma_vec (line 154)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 14. 

 initialized 14. 
Operation terminated by user during pgdraw>truncgamma_vec (line 152)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 10. 

 initialized 10. 
Operation terminated by user during pgdraw>exprnd_fast (line 176)


In pgdraw>truncgamma_vec (line 151)
    X(~Isampled) = c + exprnd_fast(ones(sum(~Isampled),1))*2;

In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 11. 

 initialized 11. 
Operation terminated by user during pgdraw>truncgamma_vec (line 151)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 7. 

 initialized 7. 
Operation terminated by user during parallel_function>make_general_channel/channel_general (line 914)


In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 13. 

 initialized 13. 
Operation terminated by user during pgdraw>exprnd_fast (line 176)


In pgdraw>truncgamma_vec (line 151)
    X(~Isampled) = c + exprnd_fast(ones(sum(~Isampled),1))*2;

In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 2. 

 initialized 2. 
Operation terminated by user during pgdraw>truncgamma_vec (line 152)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 8. 

 initialized 8. 
Operation terminated by user during pgdraw>truncgamma_vec (line 154)


In pgdraw>truncinvgrng_vec (line 125)
    Z(~Isampled) = 1.0 ./ truncgamma_vec(sum(~Isampled), 1/t);

In pgdraw (line 62)
    X(Ix) = truncinvgrng_vec(z(Ix), t);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 20. 

 initialized 20. 
Operation terminated by user during pgdraw (line 55)


In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


 starting 6. 

 initialized 6. 
Operation terminated by user during parallel_function>make_general_channel/channel_general (line 914)


In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

delete(gcp('nocreate'));
Parallel pool using the 'local' profile is shutting down.
if(min(unique(data))>1)
    fprintf('error in input format!')
elseif(min(unique(data))==1)
    data = data-1;
end

[n,p] = size(data);

%% penalty parameter initialization for initialization algo
options.gam1 = 300; 

%% prior parameters (gam for inactives) and (rho_in for initialization of prior for active) 
options.gam = 0.1/max(p,n); options.rho = sqrt(n/log(p));options.u = 2;

% %% langevin parameters
% options.c = 10; %% stabilizing gradient for the langevin algorithm
% options.step_in = .5; %%% step size for gradient search in langevin algorithm


 

if(length(unique(data))>2)
    cd ./potts
    [ delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
else
    cd ./ising
    if PG~=0
    [delta,theta] = PG_dat(data,Niter,burn,thin,nr_of_cores,options);    
    else
    [delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
    end
end
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('cd')" style="font-weight:bold">cd</a>
Cannot CD to ./ising (Name is nonexistent or not a directory).
} 
if(min(unique(data))>1)
    fprintf('error in input format!')
elseif(min(unique(data))==1)
    data = data-1;
end

[n,p] = size(data);

%% penalty parameter initialization for initialization algo
options.gam1 = 300; 

%% prior parameters (gam for inactives) and (rho_in for initialization of prior for active) 
options.gam = 0.1/max(p,n); options.rho = sqrt(n/log(p));options.u = 2;

% %% langevin parameters
% options.c = 10; %% stabilizing gradient for the langevin algorithm
% options.step_in = .5; %%% step size for gradient search in langevin algorithm


 

if(length(unique(data))>2)
    cd ./potts
    [ delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
else
    cd ./ising
    if PG~=0
    [delta,theta] = PG_dat(data,Niter,burn,thin,nr_of_cores,options);    
    else
    [delta, theta] = langevin_dat(data,Niter,burn,thin,nr_of_cores,options);
    end
end
